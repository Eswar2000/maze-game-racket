#lang slideshow
(require 2htdp/image)
(define (transform max pos)
  (+ (- max pos) 1))

(define (memqLite item collection)
  (cond ((null? collection) false)
        ((and (= (car item) (caar collection)) (= (cadr item) (cadar collection))) true)
        (else (memqLite item (cdr collection)))))

(define (Maze base maxX maxY colorWall colorOther walls pacMan puckX puckY)
  (define (row initialX y)
    (define x (transform maxX initialX))
    (if (= x 10)
        (if (memqLite (list x y) walls)
           (colorize base colorWall)
           (if (and (= x puckX) (= y puckY))
               pacMan
               (if (= y 10)
                   (colorize base "red")
                   (colorize base colorOther))))
        (if (memqLite (list x y) walls)
           (hc-append (colorize base colorWall) (row (- initialX 1) y))
           (if (and (= x puckX) (= y puckY))
               (hc-append pacMan (row (- initialX 1) y))
               (hc-append (colorize base colorOther) (row (- initialX 1) y))))
        )
    )
  (if (= maxY 1)
      (row maxX maxY)
      (vc-append (row maxX maxY) (Maze base maxX (- maxY 1) colorWall colorOther walls pacMan puckX puckY))
      )
  )

(define wall (list (list 1 2) (list 2 2) (list 3 2) (list 4 2) (list 4 3) (list 4 4) (list 6 2) (list 7 2) (list 8 2) (list 9 2) (list 9 3) (list 8 3)
                   (list 7 3) (list 6 3) (list 6 4) (list 6 5) (list 6 6) (list 5 6) (list 4 6) (list 3 6) (list 2 6) (list 2 5) (list 8 5) (list 8 6) (list 8 7) (list 2 8) (list 2 9) (list 3 9) (list 4 9) (list 5 9) (list 6 9) (list 7 9) (list 8 9) (list 9 9) (list 10 9) (list 10 8) (list 10 7) (list 10 6) (list 10 5)))
(define pacMan (rotate 30 (wedge 15 300 "solid" "gold")))
(define baseShape (filled-rounded-rectangle 30 30 #:border-color "black" #:border-width 2))
(define (drawBoard x y)
 (Maze baseShape 10 10 "brown" "lightblue" wall pacMan x y))
(define (displayMenu) (display "MENU HERE MF"))
(define (Game posX posY)
  (cond
    ((and (= posX 10) (= posY 10)) ((display "Hurray You Won") (exit)))
    (else
     (make-pict-drawer (drawBoard 1 1))
    )
  )
)
(display "Initial Board\n")
(Game 1 1)
(display "End")
